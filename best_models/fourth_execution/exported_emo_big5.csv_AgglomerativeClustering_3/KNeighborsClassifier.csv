Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;Folds;Feat. Selec. Strategy;Features;Model
KNeighborsClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'joy', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];KNeighborsClassifier()
RandomForestClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];RandomForestClassifier()
RandomForestClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];RandomForestClassifier()
RandomForestClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];RandomForestClassifier()
KNeighborsClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];KNeighborsClassifier()
RandomForestClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];RandomForestClassifier()
RandomForestClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];RandomForestClassifier()
RandomForestClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];RandomForestClassifier()
RandomForestClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];RandomForestClassifier()
DecisionTreeClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];DecisionTreeClassifier()
DecisionTreeClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];DecisionTreeClassifier()
DecisionTreeClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['trust', 'surprise', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];DecisionTreeClassifier()
DecisionTreeClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];DecisionTreeClassifier()
DecisionTreeClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];DecisionTreeClassifier()
DecisionTreeClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];DecisionTreeClassifier()
DecisionTreeClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];DecisionTreeClassifier()
DecisionTreeClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];DecisionTreeClassifier()
DecisionTreeClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];DecisionTreeClassifier()
DecisionTreeClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];DecisionTreeClassifier()
MLPClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];MLPClassifier()
MLPClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];MLPClassifier()
MLPClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];MLPClassifier()
MLPClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];MLPClassifier()
MLPClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];MLPClassifier()
MLPClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];MLPClassifier()
MLPClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];MLPClassifier()
MLPClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];MLPClassifier()
MLPClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];MLPClassifier()
MLPClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];MLPClassifier()
RandomForestClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];RandomForestClassifier()
RandomForestClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];RandomForestClassifier()
RandomForestClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];RandomForestClassifier()
SVC;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];SVC(probability=True)
KNeighborsClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];KNeighborsClassifier()
KNeighborsClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['trust', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];KNeighborsClassifier()
KNeighborsClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];KNeighborsClassifier()
KNeighborsClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];KNeighborsClassifier()
KNeighborsClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];KNeighborsClassifier()
KNeighborsClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];KNeighborsClassifier()
KNeighborsClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];KNeighborsClassifier()
KNeighborsClassifier;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];KNeighborsClassifier()
SVC;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];SVC(probability=True)
LogisticRegression;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];LogisticRegression(max_iter=100000, multi_class='multinomial')
SVC;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];SVC(probability=True)
SVC;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];SVC(probability=True)
SVC;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];SVC(probability=True)
SVC;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];SVC(probability=True)
SVC;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];SVC(probability=True)
LogisticRegression;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];LogisticRegression(max_iter=100000, multi_class='multinomial')
LogisticRegression;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];LogisticRegression(max_iter=100000, multi_class='multinomial')
SVC;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];SVC(probability=True)
LogisticRegression;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];LogisticRegression(max_iter=100000, multi_class='multinomial')
LogisticRegression;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];LogisticRegression(max_iter=100000, multi_class='multinomial')
LogisticRegression;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];LogisticRegression(max_iter=100000, multi_class='multinomial')
LogisticRegression;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'joy', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];LogisticRegression(max_iter=100000, multi_class='multinomial')
LogisticRegression;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];LogisticRegression(max_iter=100000, multi_class='multinomial')
LogisticRegression;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];LogisticRegression(max_iter=100000, multi_class='multinomial')
LogisticRegression;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];LogisticRegression(max_iter=100000, multi_class='multinomial')
SVC;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];SVC(probability=True)
SVC;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];SVC(probability=True)
GaussianNB;0.9455;0.9534;0.9455;0.958;0.9417;0.9505;0.9417;0.9426;0.9595;0.9628;0.9595;0.9595;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];GaussianNB()
GaussianNB;0.9454;0.9533;0.9454;0.958;0.9419;0.9508;0.9419;0.9428;0.9595;0.9628;0.9595;0.9595;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];GaussianNB()
GaussianNB;0.9454;0.9532;0.9454;0.9579;0.9437;0.9522;0.9437;0.9446;0.9595;0.9628;0.9595;0.9595;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];GaussianNB()
GaussianNB;0.9455;0.9534;0.9455;0.9579;0.9421;0.9508;0.9421;0.943;0.9595;0.9628;0.9595;0.9595;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];GaussianNB()
GaussianNB;0.9441;0.9524;0.9441;0.9569;0.9546;0.96;0.9546;0.9551;0.9594;0.9627;0.9594;0.9593;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];GaussianNB()
GaussianNB;0.9454;0.9532;0.9454;0.958;0.9424;0.9515;0.9424;0.9434;0.9594;0.9627;0.9594;0.9593;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];GaussianNB()
GaussianNB;0.9446;0.9527;0.9446;0.9574;0.9494;0.9563;0.9494;0.9501;0.9594;0.9627;0.9594;0.9593;1.0;not-balanced;10;kbest;['trust', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];GaussianNB()
GaussianNB;0.9447;0.9528;0.9447;0.9573;0.9489;0.9557;0.9489;0.9495;0.9594;0.9627;0.9594;0.9593;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];GaussianNB()
GaussianNB;0.9455;0.9534;0.9455;0.958;0.9415;0.9504;0.9415;0.9423;0.9594;0.9627;0.9594;0.9593;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];GaussianNB()
GaussianNB;0.9451;0.9531;0.9451;0.9577;0.9451;0.9531;0.9451;0.9459;0.9594;0.9627;0.9594;0.9593;1.0;not-balanced;10;kbest;['surprise', 'sadness', 'o_score', 'c_score', 'e_score', 'a_score', 'n_score'];GaussianNB()
